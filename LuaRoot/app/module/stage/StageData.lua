---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangliang.
--- DateTime: 2018/5/16 下午2:02
---
--[[
2.关卡数据 * 50 = 2300 + ？
【
1.id
2.重置需要的时间
3.进入的次数
5.怪物数据： (id+tid+血量)*50 + 部分尸体包裹，召唤出来的怪不保存
6.场景物品数据： (id+tid+血量)*100  + 部分箱子
注意：当怪物数据和场景数据为空的时候，从配置读取

--monsters，怪物数据
--items，场景物品数据
--furnitures, 家具数据
】
]]
local Global = Global
local getHost = Global.GetHost
local getMonsterMnger,getSceneItemMnger,getFurnitureMnger = Global.GetMonsterMnger,Global.GetSceneItemMnger,Global.GetFurnitureMnger
local getSceneEnv = Global.GetSceneEnv
local getEventTrigger = Global.GetEventTrigger
local getPetManager = Global.GetPetManager

local StageLocation = StageLocation

local StageData = class("StageData",require("app.base.DataModel"))

local saveFields = {"tid","resetTimes","locationIndex"}

function StageData:MarkSave()
    StageData.super.MarkSave(self)
    self:MarkFieldSave(saveFields)
end

function StageData:Create(tid)
    self:SetValue("tid",tid,true)
    self.resetTimes = 0
    self:Reset()
end

function StageData:Reset()
    self:SetValue("locationIndex",StageLocation:GetLocationIndex(self.tid))
    self:SetValue("resetTimes",self.resetTimes + 1,true)
end

function StageData:GetResetTimes()
    return self.resetTimes
end

function StageData:Enter()
    self.isPlaying = true
    local location = self:GetLocation()
    getSceneEnv():InitForStage(location)
    getHost():EnterStage()
    getMonsterMnger():EnterStage(self)
    getFurnitureMnger():EnterStage(self)
    getSceneItemMnger():EnterStage(self)
    getEventTrigger():EnterStage(self)
    getPetManager():EnterStage(self)
end

function StageData:Leave()
    if not self.isPlaying then return end
    self.isPlaying = false
    getMonsterMnger():Release()
    getSceneItemMnger():Release()
    getHost():Release()
    getFurnitureMnger():Release()
    getEventTrigger():Release()
    getPetManager():Release()
    getSceneEnv():ReleaseForStage()
end

function StageData:GetLocation()
    if not self.location then
        self.location = StageLocation:GetLocationByIndex(self.tid,self.locationIndex)
    end
    return self.location
end


function StageData:Export(modified)
    local data,mod = StageData.super.Export(self,modified)
    if not self.isPlaying then
        return data,mod
    end
    if self.monsterDirty then
        local monster, monsterMod = getMonsterMnger():Export(modified)
        data.monsters = monster
        self.monsters = monster
        if monsterMod then
            if not mod then mod = {} end
            mod.monsters = monsterMod
        end
        self.monsterDirty = false
    end
    if self.furnitureDirty then
        local furniture, furnitureMod =  getFurnitureMnger():Export(modified)
        data.furnitures = furniture
        self.furnitures = furniture
        if furnitureMod then
            if not mod then mod = {} end
            mod.furnitures = furnitureMod
        end
        self.furnitureDirty = false
    end
    if self.itemDirty then
        local items,itemMod = getSceneItemMnger():Export(modified)
        data.items = items
        self.items = items
        if itemMod then
            if not mod then mod = {} end
            mod.items = itemMod
        end
        self.itemDirty = false
    end
    return data,mod
end

function StageData:Import(data)
    StageData.super.Import(self,data)
    self.monsters = data.monsters
    self.items = data.items
    self.furnitures = data.furnitures
end

function StageData:MarkMonsterDirty()
    self.monsterDirty = true
    self:OnChanged()
end

function StageData:MarkItemDirty()
    self.itemDirty = true
    self:OnChanged()
end

function StageData:MarkFurnitureDirty()
    self.furnitureDirty = true
    self:OnChanged()
end

function StageData:IsDirty()
    return self.dirty or self.monsterDirty or self.furnitureDirty or self.itemDirty
end

return StageData