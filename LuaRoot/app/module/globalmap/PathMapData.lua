--大地图上发生的事件:--固定点事件：空难、掉落--尸潮：带路径显示local PathMapData = class("EventMapData",require("app.base.DataModel"))local eventMap_saveFields = {"lastZombieTime","inHomeTime"}local getSystem = Global.GetSystemlocal Timer = Timerfunction PathMapData:MarkSave()    self:MarkFieldSave(eventMap_saveFields)end--[[function PathMapData:GetAttackiTime()    if self.inhomeTime then        return Const.ZombieInHomeTime - getSystem():CurrentTime() - self.inhomeTime    endend]]function PathMapData:Export(modified)    local data,mod = PathMapData.super.Export(self,modified)    return data,modendfunction PathMapData:StartZombieCountDownTime()    self.timers = {}    local currentTime = getSystem():CurrentTime()    --上次在家    if self.inHomeTime then        local stayhomeTime = currentTime - self.inHomeTime        local zombieMoveTime = stayhomeTime - Const.ZombieInHomeTime        --移动        if zombieMoveTime > 0 then            self:SetZombieInHomeTime(nil)            --事件过长则为初始位置            self:SetLastZombieTime(zombieMoveTime > Const.ZombieMoveTime and currentTime                    or currentTime-zombieMoveTime)            self:ZombieMoveTime(zombieMoveTime > Const.ZombieMoveTime and                    Const.ZombieMoveTime or Const.ZombieMoveTime - zombieMoveTime)        else            --在家            self:ZombieAttackTime(-zombieMoveTime)        end        --上次在移动    else        local alreadyMoveTime = currentTime - self.lastZombieTime        --时间过长则初始位置        --并执行一次袭家        if alreadyMoveTime > Const.ZombieMoveTime then            local inhomeTime = alreadyMoveTime - Const.ZombieMoveTime            if inhomeTime > Const.ZombieInHomeTime then                self:SetLastZombieTime(currentTime)                self:SetZombieInHomeTime(nil)                self:ZombieMoveTime(Const.ZombieMoveTime)            else                self:SetZombieInHomeTime(currentTime - inhomeTime)                self:ZombieAttackTime(Const.ZombieInHomeTime - inhomeTime)            end        else            --移动            self:ZombieMoveTime(Const.ZombieMoveTime - alreadyMoveTime)        end    endend---袭家倒计时function PathMapData:ZombieAttackTime(totalSeconds)    if self.attackTimer then        self.attackTimer:Stop()        self.attackTimer = nil    end    self.totalAttackSeconds = totalSeconds    self.attackTimer = Timer.Once(totalSeconds,self.FinishZombieAttack,self):RegisterCd(self.ListenAttackDelta,self):Start()endfunction PathMapData:RemoveZombieAttackTime()    if self.attackTimer then        self.attackTimer:Stop()        self.attackTimer = nil    endendfunction PathMapData:AddAttackTimeListener(listener,owner)    self.attackTimeListenerOwner = owner    self.attackTimeListener = listenerendfunction PathMapData:RemoveAttackTimeListener()    self.attackTimeListener = nilendfunction PathMapData:AddFinishAttackListener(listener,owner)    self.finishAttackOwner = owner    self.finishAttackListener = listenerendfunction PathMapData:RemoveFinishAttackListener()    self.finishAttackListener = nilendfunction PathMapData:ListenAttackDelta(time)    if self.attackTimeListener then        self.attackTimeListener(self.attackTimeListenerOwner, self.totalAttackSeconds-time)    endendfunction PathMapData:FinishZombieAttack()    self.totalAttackSeconds=nil    if self.finishAttackListener then        self.finishAttackListener(self.finishAttackOwner)    endend---尸潮移动倒计时function PathMapData:ZombieMoveTime(totalSeconds)    if self.timer then        self.timer:Stop()        self.timer=nil    end    self.totalSeconds = totalSeconds    self.timer = Timer.Once(totalSeconds,self.FinishZombieMove,self):RegisterCd(self.ListenMoveDelta,self):Start()endfunction PathMapData:RemoveZombieMoveTime()    if self.timer then        self.timer:Stop()        self.timer=nil    endendfunction PathMapData:AddFinishMoveListener(listener,owner)    self.finishMoveOwner = owner    self.finishMoveListener = listenerendfunction PathMapData:RemoveFinishMoveListener()    self.finishMoveListener = nilendfunction PathMapData:AddMoveTimeListener(listener,owner)    self.moveTimeListenerOwner = owner    self.moveTimeListener = listenerendfunction PathMapData:RemoveMoveTimeListener()    self.moveTimeListener = nilendfunction PathMapData:ListenMoveDelta(time)    if self.moveTimeListener then        self.moveTimeListener(self.moveTimeListenerOwner, self.totalSeconds-time)    endendfunction PathMapData:FinishZombieMove()    self.totalSeconds=nil    if self.finishMoveListener then        self.finishMoveListener(self.finishMoveOwner)    endend--======================================================function PathMapData:SetLastZombieTime(zombieTime)    self:SetValue("lastZombieTime",zombieTime,true)endfunction PathMapData:SetZombieInHomeTime(inHomeTime)    self:SetValue("inHomeTime",inHomeTime,true)endfunction PathMapData:GetLastZombieTime()    return self.lastZombieTimeendfunction PathMapData:GetZombieInHomeTime()    return self.inHomeTimeend--======================================================return PathMapData