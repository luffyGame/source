---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangliang.
--- DateTime: 2018/4/20 下午4:38
---

local _G = _G
local EffectPoint = Const.EffectPoint

local FighterExtend = {}

function FighterExtend:IsDead()
    return self.dataModel.dead
end

function FighterExtend:GetMutexBuff(mutex)
    return self.dataModel:GetMutexBuff(mutex)
end
function FighterExtend:GetBuff(buffId,srcId)
    return self.dataModel:GetBuff(buffId,srcId)
end
function FighterExtend:AddBuff(buff)
    self.dataModel:AddBuff(buff)
    --self:PlayEffect()
end

function FighterExtend:RemoveBuff(buff)
    --release buff 资源
end

function FighterExtend:HurtBy(dmg,calc,skill)
    if self.dataModel.dead then return end
    self.dataModel:DecHp(dmg)
    self:PlayDmgPop(dmg)
    if self.dataModel.dead then
        self:Dead(skill,calc)
        self:OnDeadBy(calc.user)
    else
        self:Hit()
    end
    self:OnHurtBy(calc.user)
end

function FighterExtend:PlayDmgPop(dmg) end
function FighterExtend:Hit() end
function FighterExtend:OnHurtBy(user) end
function FighterExtend:OnDeadBy(user) end
function FighterExtend:Dead(causeSkill,skillCalc) end

function FighterExtend:PopHpDmg(hpType,hp)
    _G.Pop:PopHp(self.objId,self.view:GetTransform(),hpType,hp)
end

function FighterExtend:PlayWeaponEffect(effectRes,epoint,mounted)
    if not self.view then return end
    if epoint == EffectPoint.POS then
        self.view:PlayEffect(effectRes)
    else
        self.view:PlayWeaponEffect(effectRes,epoint,mounted)
    end
end

function FighterExtend:PlayEffect(effectRes,epoint,mounted)
    if not self.view then return end
    if epoint == EffectPoint.POS then
        self.view:PlayEffect(effectRes)
    else
        self.view:PlayMountEffect(effectRes,epoint-2,mounted)
    end
end

function FighterExtend:GetWeaponFirePos()
    if self.view then
        return self.view:GetWeaponFirePos()
    end
    return self:GetPos()
end

function FighterExtend:CanSkillReachPos(pos,skillRange)
    if self.view then
        return self.view:CanSkillReachPos(pos,skillRange)
    end
end

function FighterExtend:CanSkillReachEntity(entity,skillRange)
    if self.view then
        return self.view:CanSkillReachEntity(entity,skillRange)
    end
end

---以自己的朝向来获取技能可达位置
function FighterExtend:GetSkillReachPos(skillRange)
    if self.view then
        return self.view:GetSkillReachPos(self:GetDir(),skillRange)
    end
end

function FighterExtend:GetChoosePriorty()
    return 1
end

function FighterExtend:GetCamp()
    return self.dataModel:GetCamp()
end


--region 潜行相关
function FighterExtend:RegisterSneakNotify(func,obj)
    self.dataModel:RegisterFieldNotify("isSneak",func,obj)
end

function FighterExtend:UnregisterSneaklNotify(func,obj)
    self.dataModel:UnregisterFieldNotify("isSneak",func,obj)
end

function FighterExtend:SetSneak(value)
    self.dataModel:SetSneak(value)
    if value then
        self:SetSpeed(self.dataModel:GetSneakSpeed())
    else
        self:SetSpeed(self.dataModel:GetRunSpeed())
    end
    self.actor:Sneak()
end

function FighterExtend:IsSneak()
    if self.dataModel.IsSneak then
        return self.dataModel:IsSneak()
    end
    return false

end
--endregion

--region 爬行相关
function FighterExtend:RegisterCrawlNotify(func,obj)
    self.dataModel:RegisterFieldNotify("isCrawl",func,obj)
end

function FighterExtend:UnregisterCrawlNotify(func,obj)
    self.dataModel:UnregisterFieldNotify("isCrawl",func,obj)
end

function FighterExtend:SetCrawl(value)
    self.dataModel:SetCrawl(value)
    if value then
        self:SetSpeed(self.dataModel:GetCrawlSpeed())
    else
        self:SetSpeed(self.dataModel:GetRunSpeed())
    end

end

function FighterExtend:IsCrawl()
    if self.dataModel.IsCrawl then
        return self.dataModel:IsCrawl()
    end
    return false

end
--endregion

--region 噪音相关
function FighterExtend:SetNoiseDis(value)
    self.dataModel.noise = value
end

function FighterExtend:GetNoiseDis()
    if self.dataModel.noise then
        return self.dataModel.noise
    end
    return 0
end

function FighterExtend:ResetNoise()
    if not self.frameCount then
        self.frameCount = 0
    end
    if self:GetNoiseDis() ~= 0 then
        if self.frameCount >= 1 then
            self:SetNoiseDis(0)
            self.frameCount = 0
        end
        self.frameCount = self.frameCount + 1
    end
end
--endregion

return FighterExtend