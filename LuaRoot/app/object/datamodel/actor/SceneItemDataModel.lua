---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangliang.
--- DateTime: 2018/4/13 下午3:09
---
local SceneItemDataModel = class("SceneItemDataModel",require("app.object.datamodel.actor.ObjectDataModel"))
extendMethod(SceneItemDataModel,require("app.object.datamodel.extends.FightExtend"))
extendMethod(SceneItemDataModel,require("app.object.datamodel.extends.SceneElementExtend"))

local _G = _G
local Const = _G.Const
local CfgData = _G.CfgData
local PropHpIdx = _G.Const.PropHpIdx

local ItemActType = {
    PICK = 1,--拾取
    SEARCH =2,--搜索
    ATK = 3,--破坏
    OPENDOOR = 4,--开门
    OPERATEITEM = 5,--操作物体
}

local DeathType = {
    DISAPPEAR = 1,
    DEAD_ANI = 2,
    DEAD_BODY = 3,
}

local saveFields = {"tid","locIndex"}

function SceneItemDataModel:MarkSave()
    SceneItemDataModel.super.MarkSave(self)
    self:MarkOneFieldSave("tid")
    if self:NeedSaveLoc() then
        self:MarkFieldSave(saveFields)
    end
    self:MarkFightSave()
end

function SceneItemDataModel:NeedSaveLoc()
    return true
end

function SceneItemDataModel:Init(tid)
    self:InitId()
    self:SetValue("tid",tid,true)
    self:PostImport()
    self:Born()
end

function SceneItemDataModel:SetLocInfo(locIndex)
    self:SetValue("locIndex",locIndex,true)
end

function SceneItemDataModel:SetParent(parent)
    self.parent = parent
end

function SceneItemDataModel:Import(data)
    SceneItemDataModel.super.Import(self,data)
    if data.box then
        self:ImportBox(data.box)
    end
end

function SceneItemDataModel:Export(modified)
    local data,mod = SceneItemDataModel.super.Export(self,modified)
    local boxData,boxMod = self:ExportBox(modified)
    data.box = boxData
    if mod or boxMod then
        mod = mod or {}
        mod.box = boxMod
    end
    return data,mod
end

function SceneItemDataModel:PostImport()
    self.cfg = CfgData:GetSceneItem(self.tid)
    self.modelCfg = CfgData:GetModel(self.cfg.resId)
    self.elementType = CfgData:GetMapItemType(self.cfg.monsterType)
end

function SceneItemDataModel:Born()
    self:InitBox()
    self:ResetProp(true)
    self:SetValue("dead",false,true)
end

function SceneItemDataModel:Dead()
    self:SetValue("dead",true)
end

function SceneItemDataModel:GetBaseProp(prop)
    return self.cfg[prop]
end

function SceneItemDataModel:HasProp(propIdx)
    return propIdx == PropHpIdx
end

function SceneItemDataModel:IsUseSelectable()
    return not self.dead
end

function SceneItemDataModel:IsBox()
    return self.elementType.id == Const.SceneItemType.BOX
end

function SceneItemDataModel:GetUseIcon()
    return self.elementType.act
end

function SceneItemDataModel:GetProduceSkillId()
    return self.cfg.skillId
end

function SceneItemDataModel:CanProduceWithoutSkills()
    if self.elementType.actType == ItemActType.SEARCH then
        return true
    end
end

function SceneItemDataModel:WillDisappearOnDeath()
    return self.cfg.deadType == DeathType.DISAPPEAR
end

function SceneItemDataModel:PlayAniOnDeadth()
    return self.cfg.deadType == DeathType.DEAD_ANI
end

function SceneItemDataModel:LeaveBodyOnDeath()
    return self.cfg.deadType == DeathType.DEAD_BODY
end
--1.建造玩家打开
function SceneItemDataModel:IsOpenByBuilder()
    return self.cfg.belong == 1
end
--2.所有玩家打开
function SceneItemDataModel:IsOpenByAll()
    return self.cfg.belong == 2
end
--3.所有玩家破坏
function SceneItemDataModel:IsDestroyByAll()
    return self.cfg.belong == 3
end

function SceneItemDataModel:GetParam()
    return self.cfg.Param
end

function SceneItemDataModel:IsWorkBench()
	if not self:GetParam() then return end
	for i,v in ipairs(CfgData:GetAllWorkBench()) do
		if v.tableType == self:GetParam()[1] then
			return self:GetParam()[1]
		end
	end
	return nil
end

return SceneItemDataModel