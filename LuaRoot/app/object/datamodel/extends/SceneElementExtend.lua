---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangliang.
--- DateTime: 2018/4/16 上午10:31
---

local ipairs = ipairs
local Util = Util
local StoreItemDataModel = require("app.object.datamodel.StoreItemDataModel")

local SceneElementExtend = {}

function SceneElementExtend:GetRadarIcon()
    if not self.dead then
        return self.elementType.radarIconOn
    else
        return self.elementType.radarIconOff
    end
end

function SceneElementExtend:InitBox()
    if self.cfg.boxSize then
        self.box = StoreItemDataModel.new()
        self.box:SetCap(self.cfg.boxSize)
        local droplist = self:GetDropList()
        if droplist then
            for _,gen in ipairs(droplist) do
                self.box:Merge(gen.tid,gen.count)
            end
        end
    end
end

function SceneElementExtend:OnBoxClose()
end

function SceneElementExtend:GetDropList()
    if self.cfg.dropList then
        return Util.GenItemList(self.cfg.dropList)
    end
end

function SceneElementExtend:RegisterBoxChanged(callBack,obj)
    if self.box then
        self.box:RegisterIndexNotify(self.OnBoxChanged,self)
        self:AddEventListener("BoxChanged",callBack,obj)
    end
end

function SceneElementExtend:OnBoxChanged()
    self:FireEvent("BoxChanged",self)
end

function SceneElementExtend:UnregisterBoxChanged(callBack,obj)
    if self.box then
        self.box:UnregisterIndexNotify(self.OnBoxChanged,self)
        self:RemoveEventListener("BoxChanged",callBack,obj)
    end
end

function SceneElementExtend:ImportBox(data)
    self.box = StoreItemDataModel.new()
    self.box:Import(data)
end

function SceneElementExtend:ExportBox(modified)
    print(valStr(self.box))
    if self.box and self.box:IsDirty() then
        return self.box:Export(modified)
    end
end

require("framework.EventDispatcher").Extend(SceneElementExtend)
return SceneElementExtend