---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangliang.
--- DateTime: 2018/4/8 下午4:07
---
local ViewConsole = class("ViewConsole",require("app.ui.UiView"))
ViewConsole.res = "console"
ViewConsole.top = true

local _G = _G
local LuaUtility = CS.Game.LuaUtility
local split = string.split
local ipairs = ipairs

local suggestion ={
    "?:显示所有调试命令",
    "调试: debug 0/1",
    "添加物品: additem tid num",
    "call: 执行随后输入的lua代码",
    "test: 自定义测试命令",
}

function ViewConsole:OnOpen()
    self:RegisterButtonClick(self.butConsole,self.OnConsoleClick)
    self:RegisterButtonClick(self.butSend,self.OnSendClick)
    _G.Console = self
end

function ViewConsole:OnClose()
    _G.Console = nil
    self:UnregisterButtonClick(self.butConsole)
    self:UnregisterButtonClick(self.butSend)
end

function ViewConsole:OnConsoleClick()
    local active = not self.window.activeSelf
    self.window:SetActive(active)
    if active then
        LuaUtility.ScrollRectSetPos(self.scroll,0,true,false)
    end
end

function ViewConsole:OnSendClick()
    local cmd = LuaUtility.InputFieldGetText(self.input)
    self:Log(cmd)
    self:ProcessCmd(cmd)
end

local localCmds = {
    ["?"] = function()
        Console:ShowSuggestion()
    end,
    debug = function (params)
        Config.Debug = (params[2] == "1")
    end,
    additem = function (params)
        local tid = tonumber(params[2])
        local num = params[3] and tonumber(params[3]) or 1
        HostPlayer:AddItemToBag(tid,num)
    end,
    call = function (params)
        local chunk,err = load(params[2] or "")
        if chunk then
            local ret,val = pcall(chunk)
            if not ret then
                print(val)
            end
        else
            print(err)
        end
    end,
    test = function()
        Storage:SaveHostData(true)
        Storage:SaveHostData()
    end,
}

function ViewConsole:ProcessCmd(cmd)
    local params = split(cmd," ")
    if not params then return false end
    local localFunc = localCmds[params[1]]
    if localFunc then
        local ret,err = pcall(localFunc,params)
        if not ret then
            print(err)
        end
        return true
    end
    return false
end

function ViewConsole:Log(txt)
    LuaUtility.TextAddTxt(self.text,txt)
    LuaUtility.ScrollRectSetPos(self.scroll,0,true,true)
end

function ViewConsole:ShowSuggestion()
    for _,str in ipairs(suggestion) do
        LuaUtility.TextAddTxt(self.text,str)
    end
    LuaUtility.ScrollRectSetPos(self.scroll,0,true,true)
end

_G.ViewConsole = ViewConsole